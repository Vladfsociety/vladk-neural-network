return train_dataset[:400], train_dataset[400:500]
layers = [
    Convolutional(LeakyRelu(), filters_num=2, kernel_size=3),
    Convolutional(LeakyRelu(), filters_num=4, kernel_size=3),
    Convolutional(LeakyRelu(), filters_num=8, kernel_size=3),
    Flatten(),
    FullyConnected(128, LeakyRelu()),
    FullyConnected(10, Linear())
]
Epoch: 1/10, train loss: 2.0568, train Accuracy: 0.6025, test loss: 1.7924, test Accuracy: 0.78, epoch time: 162.436s
Epoch: 2/10, train loss: 1.7317, train Accuracy: 0.9375, test loss: 1.8528, test Accuracy: 0.85, epoch time: 160.067s
Epoch: 3/10, train loss: 1.6135, train Accuracy: 0.9975, test loss: 1.8392, test Accuracy: 0.78, epoch time: 159.618s
Epoch: 4/10, train loss: 1.5519, train Accuracy: 0.9975, test loss: 1.8224, test Accuracy: 0.8, epoch time: 161.588s
Epoch: 5/10, train loss: 1.5255, train Accuracy: 1.0, test loss: 1.835, test Accuracy: 0.77, epoch time: 159.78s
Epoch: 6/10, train loss: 1.5098, train Accuracy: 1.0, test loss: 1.7875, test Accuracy: 0.88, epoch time: 158.221s
Epoch: 7/10, train loss: 1.5211, train Accuracy: 1.0, test loss: 1.8637, test Accuracy: 0.8, epoch time: 159.314s
Epoch: 8/10, train loss: 1.5451, train Accuracy: 0.9975, test loss: 1.7577, test Accuracy: 0.81, epoch time: 165.983s
Epoch: 9/10, train loss: 1.5288, train Accuracy: 1.0, test loss: 1.7637, test Accuracy: 0.88, epoch time: 164.638s
Epoch: 10/10, train loss: 1.5167, train Accuracy: 1.0, test loss: 1.8835, test Accuracy: 0.79, epoch time: 164.414s
exec time:  1616.0604257583618



return train_dataset[:800], train_dataset[800:1000]
layers = [
    FullyConnected(256, LeakyRelu()),
    FullyConnected(128, LeakyRelu()),
    FullyConnected(64, LeakyRelu()),
    FullyConnected(10, Linear()),
]
Epoch: 1/30, train loss: 1.9564, train Accuracy: 0.625, test loss: 1.8058, test Accuracy: 0.815, epoch time: 1.105s
Epoch: 2/30, train loss: 1.6986, train Accuracy: 0.8675, test loss: 1.6776, test Accuracy: 0.845, epoch time: 1.162s
Epoch: 3/30, train loss: 1.6143, train Accuracy: 0.9325, test loss: 1.7015, test Accuracy: 0.87, epoch time: 1.103s
Epoch: 4/30, train loss: 1.5668, train Accuracy: 0.9613, test loss: 1.6659, test Accuracy: 0.875, epoch time: 1.128s
Epoch: 5/30, train loss: 1.5308, train Accuracy: 0.9875, test loss: 1.6414, test Accuracy: 0.895, epoch time: 1.051s
Epoch: 6/30, train loss: 1.5088, train Accuracy: 0.99, test loss: 1.6321, test Accuracy: 0.875, epoch time: 1.107s
Epoch: 7/30, train loss: 1.4967, train Accuracy: 0.995, test loss: 1.6244, test Accuracy: 0.87, epoch time: 1.119s
Epoch: 8/30, train loss: 1.4983, train Accuracy: 0.9938, test loss: 1.6564, test Accuracy: 0.895, epoch time: 1.067s
Epoch: 9/30, train loss: 1.4932, train Accuracy: 0.9962, test loss: 1.6491, test Accuracy: 0.89, epoch time: 1.09s
Epoch: 10/30, train loss: 1.4864, train Accuracy: 0.9962, test loss: 1.6088, test Accuracy: 0.88, epoch time: 1.094s
Epoch: 11/30, train loss: 1.4853, train Accuracy: 0.9962, test loss: 1.6272, test Accuracy: 0.87, epoch time: 1.091s
Epoch: 12/30, train loss: 1.4701, train Accuracy: 1.0, test loss: 1.6039, test Accuracy: 0.88, epoch time: 1.064s
Epoch: 13/30, train loss: 1.4733, train Accuracy: 0.9988, test loss: 1.5951, test Accuracy: 0.9, epoch time: 1.087s
Epoch: 14/30, train loss: 1.4917, train Accuracy: 0.995, test loss: 1.6771, test Accuracy: 0.855, epoch time: 1.084s
Epoch: 15/30, train loss: 1.4824, train Accuracy: 0.9975, test loss: 1.5827, test Accuracy: 0.9, epoch time: 1.04s
Epoch: 16/30, train loss: 1.4716, train Accuracy: 1.0, test loss: 1.5812, test Accuracy: 0.895, epoch time: 1.082s
Epoch: 17/30, train loss: 1.469, train Accuracy: 0.9988, test loss: 1.5949, test Accuracy: 0.89, epoch time: 1.083s
Epoch: 18/30, train loss: 1.4681, train Accuracy: 1.0, test loss: 1.5832, test Accuracy: 0.875, epoch time: 1.075s
Epoch: 19/30, train loss: 1.4858, train Accuracy: 0.99, test loss: 1.6011, test Accuracy: 0.895, epoch time: 1.093s
Epoch: 20/30, train loss: 1.4691, train Accuracy: 1.0, test loss: 1.6159, test Accuracy: 0.88, epoch time: 1.15s
Epoch: 21/30, train loss: 1.4701, train Accuracy: 0.9988, test loss: 1.5892, test Accuracy: 0.88, epoch time: 1.092s
Epoch: 22/30, train loss: 1.4775, train Accuracy: 0.995, test loss: 1.6202, test Accuracy: 0.875, epoch time: 1.052s
Epoch: 23/30, train loss: 1.4685, train Accuracy: 1.0, test loss: 1.5899, test Accuracy: 0.89, epoch time: 1.059s
Epoch: 24/30, train loss: 1.4644, train Accuracy: 1.0, test loss: 1.5997, test Accuracy: 0.875, epoch time: 1.074s
Epoch: 25/30, train loss: 1.4809, train Accuracy: 0.995, test loss: 1.6171, test Accuracy: 0.88, epoch time: 1.053s
Epoch: 26/30, train loss: 1.4761, train Accuracy: 0.9962, test loss: 1.6047, test Accuracy: 0.87, epoch time: 1.063s
Epoch: 27/30, train loss: 1.4664, train Accuracy: 1.0, test loss: 1.6139, test Accuracy: 0.865, epoch time: 1.071s
Epoch: 28/30, train loss: 1.4642, train Accuracy: 1.0, test loss: 1.6099, test Accuracy: 0.88, epoch time: 1.11s
Epoch: 29/30, train loss: 1.4642, train Accuracy: 1.0, test loss: 1.6005, test Accuracy: 0.885, epoch time: 1.061s
Epoch: 30/30, train loss: 1.4633, train Accuracy: 1.0, test loss: 1.5951, test Accuracy: 0.885, epoch time: 1.057s
--- 32.57006621360779 seconds ---


layers = [
    Convolutional(LeakyRelu(), filters_num=4, kernel_size=3),
    Convolutional(LeakyRelu(), filters_num=4, kernel_size=3),
    Convolutional(LeakyRelu(), filters_num=4, kernel_size=3),
    Flatten(),
    FullyConnected(128, LeakyRelu()),
    FullyConnected(10, Linear())
]
Epoch: 1/15, train loss: 1.939, train Accuracy: 0.7037, test loss: 1.7799, test Accuracy: 0.875, epoch time: 363.048s
Epoch: 2/15, train loss: 1.6976, train Accuracy: 0.9175, test loss: 1.7182, test Accuracy: 0.87, epoch time: 365.357s
Epoch: 3/15, train loss: 1.6057, train Accuracy: 0.9788, test loss: 1.6302, test Accuracy: 0.925, epoch time: 360.527s
Epoch: 4/15, train loss: 1.5695, train Accuracy: 0.9838, test loss: 1.7497, test Accuracy: 0.88, epoch time: 358.178s
Epoch: 5/15, train loss: 1.5402, train Accuracy: 0.9975, test loss: 1.6659, test Accuracy: 0.915, epoch time: 359.292s
Epoch: 6/15, train loss: 1.5138, train Accuracy: 1.0, test loss: 1.6235, test Accuracy: 0.925, epoch time: 357.846s
Epoch: 7/15, train loss: 1.5101, train Accuracy: 1.0, test loss: 1.6034, test Accuracy: 0.93, epoch time: 358.258s
Epoch: 8/15, train loss: 1.4963, train Accuracy: 1.0, test loss: 1.5893, test Accuracy: 0.92, epoch time: 359.548s
Epoch: 9/15, train loss: 1.4891, train Accuracy: 1.0, test loss: 1.7042, test Accuracy: 0.905, epoch time: 362.712s
Epoch: 10/15, train loss: 1.4958, train Accuracy: 1.0, test loss: 1.6438, test Accuracy: 0.92, epoch time: 361.976s
Epoch: 11/15, train loss: 1.4908, train Accuracy: 1.0, test loss: 1.6318, test Accuracy: 0.895, epoch time: 361.59s
Epoch: 12/15, train loss: 1.4874, train Accuracy: 1.0, test loss: 1.6377, test Accuracy: 0.915, epoch time: 360.399s
Epoch: 13/15, train loss: 1.4879, train Accuracy: 1.0, test loss: 1.6226, test Accuracy: 0.94, epoch time: 359.11s
Epoch: 14/15, train loss: 1.485, train Accuracy: 1.0, test loss: 1.6146, test Accuracy: 0.915, epoch time: 364.369s
Epoch: 15/15, train loss: 1.4799, train Accuracy: 1.0, test loss: 1.6611, test Accuracy: 0.93, epoch time: 362.149s
exec time:  5414.361704349518






improve forward
return train_dataset[:800], train_dataset[800:1000]
layers = [
    Convolutional(LeakyRelu(), filters_num=4, kernel_size=3),
    Convolutional(LeakyRelu(), filters_num=8, kernel_size=3),
    Convolutional(LeakyRelu(), filters_num=16, kernel_size=3),
    Flatten(),
    FullyConnected(128, LeakyRelu()),
    FullyConnected(10, Linear())
]
Epoch: 1/15, train loss: 1.9339, train Accuracy: 0.7113, test loss: 1.7944, test Accuracy: 0.87, epoch time: 169.643s
Epoch: 2/15, train loss: 1.6755, train Accuracy: 0.9337, test loss: 1.7513, test Accuracy: 0.885, epoch time: 170.082s
Epoch: 3/15, train loss: 1.5844, train Accuracy: 0.98, test loss: 1.6537, test Accuracy: 0.895, epoch time: 169.565s
Epoch: 4/15, train loss: 1.5443, train Accuracy: 0.9962, test loss: 1.6674, test Accuracy: 0.905, epoch time: 169.569s
Epoch: 5/15, train loss: 1.5172, train Accuracy: 1.0, test loss: 1.6367, test Accuracy: 0.895, epoch time: 170.58s
Epoch: 6/15, train loss: 1.5119, train Accuracy: 1.0, test loss: 1.7148, test Accuracy: 0.92, epoch time: 168.383s
Epoch: 7/15, train loss: 1.4985, train Accuracy: 1.0, test loss: 1.6558, test Accuracy: 0.935, epoch time: 168.766s
Epoch: 8/15, train loss: 1.5013, train Accuracy: 1.0, test loss: 1.6722, test Accuracy: 0.925, epoch time: 171.251s
Epoch: 9/15, train loss: 1.4932, train Accuracy: 1.0, test loss: 1.7121, test Accuracy: 0.905, epoch time: 169.6s
Epoch: 10/15, train loss: 1.4953, train Accuracy: 1.0, test loss: 1.6404, test Accuracy: 0.935, epoch time: 173.25s
Epoch: 11/15, train loss: 1.4915, train Accuracy: 1.0, test loss: 1.6435, test Accuracy: 0.93, epoch time: 170.191s
Epoch: 12/15, train loss: 1.4876, train Accuracy: 1.0, test loss: 1.6011, test Accuracy: 0.925, epoch time: 171.865s
Epoch: 13/15, train loss: 1.4828, train Accuracy: 1.0, test loss: 1.6786, test Accuracy: 0.935, epoch time: 176.82s
Epoch: 14/15, train loss: 1.4836, train Accuracy: 1.0, test loss: 1.6633, test Accuracy: 0.91, epoch time: 181.258s
Epoch: 15/15, train loss: 1.4846, train Accuracy: 1.0, test loss: 1.667, test Accuracy: 0.93, epoch time: 182.241s
exec time:  2583.067637205124


improve layer error calc
return train_dataset[:800], train_dataset[800:1000]
layers = [
    Convolutional(LeakyRelu(), filters_num=4, kernel_size=3),
    Convolutional(LeakyRelu(), filters_num=8, kernel_size=3),
    Convolutional(LeakyRelu(), filters_num=16, kernel_size=3),
    Flatten(),
    FullyConnected(128, LeakyRelu()),
    FullyConnected(10, Linear())
]
Epoch: 1/15, train loss: 1.9339, train Accuracy: 0.7113, test loss: 1.7944, test Accuracy: 0.87, epoch time: 58.688s
Epoch: 2/15, train loss: 1.6755, train Accuracy: 0.9337, test loss: 1.7513, test Accuracy: 0.885, epoch time: 60.17s
Epoch: 3/15, train loss: 1.5844, train Accuracy: 0.98, test loss: 1.6537, test Accuracy: 0.895, epoch time: 60.072s
Epoch: 4/15, train loss: 1.5443, train Accuracy: 0.9962, test loss: 1.6674, test Accuracy: 0.905, epoch time: 60.325s
Epoch: 5/15, train loss: 1.5172, train Accuracy: 1.0, test loss: 1.6367, test Accuracy: 0.895, epoch time: 62.587s
Epoch: 6/15, train loss: 1.5119, train Accuracy: 1.0, test loss: 1.7148, test Accuracy: 0.92, epoch time: 60.395s
Epoch: 7/15, train loss: 1.4985, train Accuracy: 1.0, test loss: 1.6558, test Accuracy: 0.935, epoch time: 61.21s
Epoch: 8/15, train loss: 1.5013, train Accuracy: 1.0, test loss: 1.6722, test Accuracy: 0.925, epoch time: 60.79s
Epoch: 9/15, train loss: 1.4932, train Accuracy: 1.0, test loss: 1.7121, test Accuracy: 0.905, epoch time: 61.716s
Epoch: 10/15, train loss: 1.4953, train Accuracy: 1.0, test loss: 1.6404, test Accuracy: 0.935, epoch time: 64.063s
Epoch: 11/15, train loss: 1.4915, train Accuracy: 1.0, test loss: 1.6435, test Accuracy: 0.93, epoch time: 61.987s
Epoch: 12/15, train loss: 1.4876, train Accuracy: 1.0, test loss: 1.6011, test Accuracy: 0.925, epoch time: 65.373s
Epoch: 13/15, train loss: 1.4828, train Accuracy: 1.0, test loss: 1.6786, test Accuracy: 0.935, epoch time: 61.308s
Epoch: 14/15, train loss: 1.4836, train Accuracy: 1.0, test loss: 1.6633, test Accuracy: 0.91, epoch time: 62.336s
Epoch: 15/15, train loss: 1.4846, train Accuracy: 1.0, test loss: 1.667, test Accuracy: 0.93, epoch time: 64.866s
exec time:  925.8877778053284